{"version":3,"sources":["hooks/hooks.ts","store/types/authTypes.ts","firebase/config.ts","store/actions/authActions.ts","components/UI/Button.tsx","components/UI/Input.tsx","components/UI/Message.tsx","components/pages/SignIn.tsx","components/pages/SignUp.tsx","store/types/galleryTypes.ts","store/actions/galleryActions.ts","components/UI/Card.tsx","components/UI/ImageModal.tsx","components/pages/Homepage.tsx","components/pages/ForgotPassword.tsx","components/auth/PrivateRoute.tsx","components/UI/FileUpload.tsx","components/UI/Modal.tsx","components/sections/UploadImagesModal.tsx","components/UI/Alert.tsx","components/pages/Dashboard.tsx","components/sections/Header.tsx","components/UI/Loader.tsx","App.tsx","reportWebVitals.ts","store/reducers/authReducer.ts","store/reducers/galleryReducer.ts","store/index.ts","index.tsx"],"names":["useAppSelector","useSelector","SET_USER","SIGN_OUT","SET_LOADING","SET_ERROR","NEED_VERIFICATION","SET_SUCCESS","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","sendPasswordResetEmail","email","successMsg","dispatch","a","auth","setSuccess","console","log","setError","message","getUserById","id","setLoading","firestore","collection","doc","get","user","exists","userData","data","type","payload","value","msg","Button","text","className","onClick","disabled","Input","placeholder","name","onChange","label","htmlFor","required","autoComplete","Message","typeClass","SignIn","history","useHistory","useState","setEmail","password","setPassword","loading","error","state","useDispatch","useEffect","onSubmit","e","onSuccess","onError","preventDefault","replace","pathname","signInWithEmailAndPassword","currentTarget","to","SignUp","firstName","setFirstName","createUserWithEmailAndPassword","res","uid","createdAt","FieldValue","serverTimestamp","set","sendEmailVerification","GET_IMAGES","ADD_IMAGE","DELETE_IMAGE","getImage","docs","arr","forEach","fileName","filePath","imageUrl","uploaderName","uploaderId","push","Card","onDelete","onImageClick","publicCard","uploader","style","backgroundImage","href","ImageModal","onClose","url","targetEl","document","getElementById","modal","src","alt","ReactDOM","createPortal","Homepage","gallery","images","imagesLoaded","setImageUrl","length","map","image","ForgotPassword","success","submitHandler","PrivateRoute","children","rest","authenticated","render","location","FileUpload","fileInput","useRef","multiple","ref","current","click","Modal","title","UploadImagesModal","files","setFiles","filesArr","setFilesArr","setDisabled","onProgress","Array","from","file","Date","getTime","storageRef","storage","uploadTask","child","put","on","snapshot","progress","bytesTransferred","totalBytes","getDownloadURL","then","downloadURL","add","catch","err","addImage","copyOfFilesArr","findFile","find","f","Math","floor","updatedArr","index","max","Alert","deleting","alert","Dashboard","showUploadImagesModal","setShowUploadImagesModal","showDeleteImageAlert","setShowDeleteImageAlert","selectedImage","setSelectedImage","setDeleting","userImages","setUserImages","needVerification","filtered","filter","i","deleteHandler","imageRef","delete","Header","signOut","Loader","App","unsubscribe","onAuthStateChanged","emailVerified","basename","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","authReducer","action","galleryReducer","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","StrictMode"],"mappings":"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","file":"static/js/main.3b903458.chunk.js","sourcesContent":["import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\r\nimport type { RootState, AppDispatch } from '../store'\r\n\r\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector\r\n","// Auth Actions\r\nexport const SET_USER = 'SET_USER';\r\nexport const SIGN_OUT = 'SIGN_OUT';\r\nexport const SET_LOADING = 'SET_LOADING';\r\nexport const SET_ERROR = 'SET_ERROR';\r\nexport const NEED_VERIFICATION = 'NEED_VERIFICATION';\r\nexport const SET_SUCCESS = 'SET_SUCCESS';\r\n\r\n// Auth Action Payload Types\r\nexport interface User {\r\n  firstName: string;\r\n  email: string;\r\n  id: string;\r\n  createdAt: any;\r\n}\r\n\r\nexport interface AuthState {\r\n  user: User | null;\r\n  authenticated: boolean;\r\n  loading: boolean;\r\n  error: string;\r\n  needVerification: boolean;\r\n  success: string;\r\n}\r\n\r\nexport interface SignUpData {\r\n  firstName: string;\r\n  email: string;\r\n  password: string;\r\n}\r\n\r\nexport interface SignInData {\r\n  email: string;\r\n  password: string;\r\n}\r\n\r\n// Auth Action Types\r\ninterface SetUserAction {\r\n  type: typeof SET_USER;\r\n  payload: User;\r\n}\r\n\r\ninterface SetLoadingAction {\r\n  type: typeof SET_LOADING;\r\n  payload: boolean;\r\n}\r\n\r\ninterface SignOutAction {\r\n  type: typeof SIGN_OUT;\r\n}\r\n\r\ninterface SetErrorAction {\r\n  type: typeof SET_ERROR;\r\n  payload: string;\r\n}\r\n\r\ninterface NeedVerificationAction {\r\n  type: typeof NEED_VERIFICATION;\r\n}\r\n\r\ninterface SetSuccessAction {\r\n  type: typeof SET_SUCCESS;\r\n  payload: string;\r\n}\r\n\r\nexport type AuthAction = SetUserAction | SetLoadingAction | SignOutAction | SetErrorAction | NeedVerificationAction | SetSuccessAction;\r\n\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDhh-luFO_tthXaFCwpe88lVdQGPSShAQk\",\r\n  authDomain: \"ema-john-simple-rn.firebaseapp.com\",\r\n  projectId: \"ema-john-simple-rn\",\r\n  storageBucket: \"ema-john-simple-rn.appspot.com\",\r\n  messagingSenderId: \"988958500175\",\r\n  appId: \"1:988958500175:web:48721bc26d0c41bde8d13a\",\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;\r\n","import { ThunkAction } from \"redux-thunk\";\r\nimport {\r\n  SignUpData,\r\n  AuthAction,\r\n  SET_USER,\r\n  User,\r\n  SET_LOADING,\r\n  SIGN_OUT,\r\n  SignInData,\r\n  SET_ERROR,\r\n  NEED_VERIFICATION,\r\n  SET_SUCCESS,\r\n} from \"../types/authTypes\";\r\nimport { RootState } from \"..\";\r\nimport firebase from \"../../firebase/config\";\r\n\r\nexport type AuthThunk = ThunkAction<void, RootState, unknown, AuthAction>;\r\n\r\n// Create user\r\nexport const signup = (\r\n  data: SignUpData,\r\n  onSuccess: () => void,\r\n  onError: () => void\r\n): AuthThunk => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch(setLoading(true));\r\n      const res = await firebase\r\n        .auth()\r\n        .createUserWithEmailAndPassword(data.email, data.password);\r\n      if (res.user) {\r\n        const userData: User = {\r\n          email: data.email,\r\n          firstName: data.firstName,\r\n          id: res.user.uid,\r\n          createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n        };\r\n        await firebase\r\n          .firestore()\r\n          .collection(\"users\")\r\n          .doc(res.user.uid)\r\n          .set(userData);\r\n        await res.user.sendEmailVerification();\r\n        dispatch({ type: NEED_VERIFICATION });\r\n        dispatch({ type: SET_USER, payload: userData });\r\n        onSuccess();\r\n      }\r\n    } catch (err) {\r\n      onError();\r\n      dispatch(setLoading(false));\r\n      dispatch(setError(err.message));\r\n    }\r\n  };\r\n};\r\n\r\n// Set need verification\r\nexport const setNeedVerification = (): AuthThunk => {\r\n  return (dispatch) => dispatch({ type: NEED_VERIFICATION });\r\n};\r\n\r\n// Log in\r\nexport const signin = (\r\n  data: SignInData,\r\n  onSuccess: () => void,\r\n  onError: () => void\r\n): AuthThunk => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch(setLoading(true));\r\n      await firebase\r\n        .auth()\r\n        .signInWithEmailAndPassword(data.email, data.password);\r\n      onSuccess();\r\n    } catch (err) {\r\n      onError();\r\n      dispatch(setLoading(false));\r\n      dispatch(setError(err.message));\r\n    }\r\n  };\r\n};\r\n\r\n// Sing out\r\nexport const signout = (): AuthThunk => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch(setLoading(true));\r\n      await firebase.auth().signOut();\r\n      dispatch({ type: SIGN_OUT });\r\n    } catch (err) {\r\n      console.log(err);\r\n      dispatch(setError(err.message));\r\n    }\r\n  };\r\n};\r\n\r\n// Send password reset email\r\nexport const sendPasswordResetEmail = (\r\n  email: string,\r\n  successMsg: string\r\n): AuthThunk => {\r\n  return async (dispatch) => {\r\n    try {\r\n      await firebase.auth().sendPasswordResetEmail(email);\r\n      dispatch(setSuccess(successMsg));\r\n    } catch (err) {\r\n      console.log(err);\r\n      dispatch(setError(err.message));\r\n    }\r\n  };\r\n};\r\n\r\n// Get user by id\r\nexport const getUserById = (id: string): AuthThunk => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch(setLoading(true));\r\n      const user = await firebase.firestore().collection(\"users\").doc(id).get();\r\n      if (user.exists) {\r\n        const userData = user.data() as User;\r\n        dispatch({ type: SET_USER, payload: userData });\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      dispatch(setError(err.message));\r\n    }\r\n  };\r\n};\r\n\r\n// Set loading\r\nexport const setLoading = (value: boolean): AuthThunk => {\r\n  return (dispatch) => dispatch({ type: SET_LOADING, payload: value });\r\n};\r\n\r\n// Set error\r\nexport const setError = (msg: string): AuthThunk => {\r\n  return (dispatch) => {\r\n    dispatch({ type: SET_ERROR, payload: msg });\r\n  };\r\n};\r\n\r\n// Set success\r\nexport const setSuccess = (msg: string): AuthThunk => {\r\n  return (dispatch) => {\r\n    dispatch({ type: SET_SUCCESS, payload: msg });\r\n  };\r\n};\r\n","import { ButtonHTMLAttributes } from 'react';\r\n\r\ninterface ButtonProps extends ButtonHTMLAttributes<HTMLButtonElement> {\r\n  text: string;\r\n  className?: string;\r\n}\r\n\r\nconst Button = ({ text, className, onClick, type, disabled }: ButtonProps) => {\r\n  return(\r\n    <button type={type} className={`button ${className}`} onClick={onClick} disabled={disabled}>{text}</button>\r\n  );\r\n}\r\n\r\nexport default Button;","import { InputHTMLAttributes } from 'react';\r\n\r\ninterface InputProps extends InputHTMLAttributes<HTMLInputElement> {\r\n  label: string;\r\n}\r\n\r\nconst Input = ({ type='text', placeholder, value, name, onChange, label }: InputProps) => {\r\n  return(\r\n    <div className=\"field\">\r\n        <div className=\"control\">\r\n            <label htmlFor=\"\">{label}</label>\r\n            <input \r\n                type={type} \r\n                className=\"input\"\r\n                placeholder={placeholder}\r\n                value={value}\r\n                name={name}\r\n                id={name}\r\n                onChange={onChange}\r\n                required\r\n                autoComplete=\"off\"\r\n            />\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Input;","import React, { FC } from 'react';\r\n\r\ninterface MessageProps {\r\n  msg: string;\r\n  type: 'danger' | 'success' | 'info';\r\n}\r\n\r\nconst Message: FC<MessageProps> = ({ msg, type }) => {\r\n  let typeClass = '';\r\n\r\n  if(type === 'danger') {\r\n    typeClass = 'is-danger';\r\n  }\r\n\r\n  if(type === 'success') {\r\n    typeClass = 'is-success';\r\n  }\r\n\r\n  if(type === 'info') {\r\n    typeClass = 'is-info';\r\n  }\r\n\r\n  return(\r\n    <article className={`message ${typeClass}`}>\r\n      <div className=\"message-body\">{msg}</div>\r\n    </article>\r\n  );\r\n}\r\n\r\nexport default Message;","import React, { FormEvent, useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { useAppSelector } from '../../hooks/hooks';\r\nimport { setError, signin } from '../../store/actions/authActions';\r\nimport Button from '../UI/Button';\r\nimport Input from '../UI/Input';\r\nimport Message from '../UI/Message';\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst SignIn = () => {\r\n    const history = useHistory();\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const { error } = useAppSelector(state => state.auth);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            if(error) dispatch(setError(''));\r\n        }\r\n    }, [error, dispatch]);\r\n\r\n    const submitHandler = (e: FormEvent) => {\r\n        e.preventDefault();\r\n        if(error) {\r\n            dispatch(setError(''));\r\n        }\r\n        setLoading(true);\r\n        dispatch(signin(\r\n            {email, password}, \r\n            () => {\r\n                history.replace({ pathname: '/dashboard' });\r\n            }, \r\n            () => {\r\n                setLoading(false);\r\n            }\r\n        ));\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2 className=\"has-text-centered is-size-2 mb-3\">SignIn</h2>\r\n            <form className=\"form\" onSubmit={submitHandler}>\r\n                {error && <Message type=\"danger\" msg={error} />}\r\n                <Input\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    value={email}\r\n                    onChange={e => setEmail(e.currentTarget.value)}\r\n                    placeholder=\"Email address\"\r\n                    label=\"Email address\"\r\n                />\r\n                <Input\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    value={password}\r\n                    onChange={e => setPassword(e.currentTarget.value)}\r\n                    placeholder=\"Password\"\r\n                    label=\"Password\"\r\n                />\r\n                <p><Link to=\"/forgot-password\">Forgot password ?</Link></p>\r\n                <Button text={loading ? \"Loading...\" : \"Sign In\"} className=\"is-primary is-fullwidth mt-5\" disabled={loading} />\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SignIn;","import React, { useState, FormEvent, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory } from \"react-router\";\r\nimport Input from '../UI/Input';\r\nimport Button from '../UI/Button';\r\nimport Message from '../UI/Message';\r\nimport { signup, setError } from '../../store/actions/authActions';\r\nimport { useAppSelector } from '../../hooks/hooks';\r\n\r\nconst SignUp = () => {\r\n  const history = useHistory();\r\n  const [firstName, setFirstName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const { error } = useAppSelector(state => state.auth);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      if(error) {\r\n        console.log('signup useefect error: ', error);\r\n        dispatch(setError(''));\r\n      }\r\n    }\r\n  }, [error, dispatch]);\r\n\r\n  const submitHandler = (e: FormEvent) => {\r\n    e.preventDefault();\r\n    if(error) {\r\n      console.log('signup submitHandler error: ', error);\r\n      dispatch(setError(''));\r\n    }\r\n    setLoading(true);\r\n    dispatch(signup(\r\n      { email, password, firstName }, \r\n      () => {\r\n          history.replace({ pathname: '/dashboard' });\r\n      }, \r\n      () => {\r\n        setLoading(false); \r\n      }\r\n    ));\r\n  }\r\n\r\n  return(\r\n    <section className=\"section\">\r\n      <div className=\"container\">\r\n        <h2 className=\"has-text-centered is-size-2 mb-3\">Sign Up</h2>\r\n        <form className=\"form\" onSubmit={submitHandler}>\r\n          {error && <Message type=\"danger\" msg={error} />}\r\n          <Input \r\n            name=\"firstName\"\r\n            value={firstName}\r\n            onChange={(e) => setFirstName(e.currentTarget.value)}\r\n            placeholder=\"First name\"\r\n            label=\"First name\"\r\n          />\r\n          <Input \r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.currentTarget.value)}\r\n            placeholder=\"Email address\"\r\n            label=\"Email address\"\r\n          />\r\n          <Input \r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.currentTarget.value)}\r\n            placeholder=\"Password\"\r\n            label=\"Password\"\r\n          />\r\n          <Button text={loading ? \"Loading...\" : \"Sign Up\"} className=\"is-primary is-fullwidth mt-5\" disabled={loading} />\r\n        </form>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default SignUp;","// Gallery Actions\r\nexport const GET_IMAGES = 'GET_IMAGES';\r\nexport const ADD_IMAGE = 'ADD_IMAGE';\r\nexport const DELETE_IMAGE = 'DELETE_IMAGE';\r\n\r\n// Gallery Action Payload Types\r\nexport interface GalleryImage {\r\n    id?: string;\r\n    imageUrl: string;\r\n    filePath: string;\r\n    fileName: string;\r\n    createdAt: number;\r\n    uploaderName: string;\r\n    uploaderId: string;\r\n}\r\n\r\nexport interface GalleryState {\r\n    images: GalleryImage[];\r\n    imagesLoaded: boolean;\r\n}\r\n\r\n// Gallery Action Types\r\ninterface AddImageAction {\r\n    type: typeof ADD_IMAGE;\r\n    payload: GalleryImage;\r\n}\r\n\r\ninterface GetImageAction {\r\n    type: typeof GET_IMAGES;\r\n    payload: GalleryImage[];\r\n}\r\n\r\ninterface DeleteImageAction {\r\n    type: typeof DELETE_IMAGE;\r\n    payload: GalleryImage;\r\n}\r\n\r\nexport type GalleryAction = AddImageAction | GetImageAction | DeleteImageAction;\r\n  ","import {\r\n  ADD_IMAGE,\r\n  DELETE_IMAGE,\r\n  GalleryAction,\r\n  GalleryImage,\r\n  GET_IMAGES,\r\n} from \"./../types/galleryTypes\";\r\nimport { ThunkAction } from \"redux-thunk\";\r\nimport { User } from \"../types/authTypes\";\r\nimport { RootState } from \"..\";\r\nimport firebase from \"../../firebase/config\";\r\n\r\nexport type GalleryThunk = ThunkAction<void, RootState, unknown, GalleryAction>;\r\n\r\n// Add/upload image\r\nexport const addImage = (\r\n  files: FileList,\r\n  user: User,\r\n  onProgress: (num: number, file: File) => void\r\n): GalleryThunk => {\r\n  return async (dispatch) => {\r\n    Array.from(files).forEach(async (file: File) => {\r\n      const filePath = `images/${user.id}/${new Date().getTime()}-${file.name}`;\r\n      console.log(filePath);\r\n      const storageRef = firebase.storage().ref();\r\n      const uploadTask = storageRef.child(filePath).put(file);\r\n\r\n      uploadTask.on(\r\n        \"state_changed\",\r\n        (snapshot) => {\r\n          const progress =\r\n            (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n          onProgress(progress, file);\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        },\r\n        () => {\r\n          // Upload completed successfully, now we can get the download URL\r\n          uploadTask.snapshot.ref\r\n            .getDownloadURL()\r\n            .then(async (downloadURL) => {\r\n              try {\r\n                const data: GalleryImage = {\r\n                  imageUrl: downloadURL,\r\n                  fileName: file.name,\r\n                  filePath: filePath,\r\n                  uploaderName: user.firstName,\r\n                  uploaderId: user.id,\r\n                  createdAt: new Date().getTime(),\r\n                };\r\n                const ref = await firebase\r\n                  .firestore()\r\n                  .collection(\"gallery\")\r\n                  .add(data);\r\n                data.id = ref.id;\r\n                dispatch({ type: ADD_IMAGE, payload: data });\r\n              } catch (err) {\r\n                console.log(err);\r\n              }\r\n            })\r\n            .catch((err) => console.log(err));\r\n        }\r\n      );\r\n    });\r\n  };\r\n};\r\n\r\n// Get image\r\nexport const getImage = (): GalleryThunk => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docs = await firebase.firestore().collection(\"gallery\").get();\r\n      const arr: GalleryImage[] = [];\r\n      docs.forEach((doc) => {\r\n        const {\r\n          createdAt,\r\n          fileName,\r\n          filePath,\r\n          imageUrl,\r\n          uploaderName,\r\n          uploaderId,\r\n        } = doc.data();\r\n\r\n        arr.push({\r\n          createdAt,\r\n          fileName,\r\n          filePath,\r\n          imageUrl,\r\n          uploaderName,\r\n          uploaderId,\r\n          id: doc.id,\r\n        });\r\n      });\r\n      dispatch({ type: GET_IMAGES, payload: arr });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n\r\n// Delete image\r\nexport const deleteImage = (\r\n  image: GalleryImage,\r\n  onSuccess: () => void\r\n): GalleryThunk => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const imageRef = firebase.storage().ref().child(image.filePath);\r\n      await imageRef.delete();\r\n      await firebase.firestore().collection(\"gallery\").doc(image.id).delete();\r\n      dispatch({ type: DELETE_IMAGE, payload: image });\r\n      onSuccess();\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n","import React, { MouseEvent } from 'react';\r\n\r\ninterface CardProps {\r\n    imageUrl: string;\r\n    onDelete: (e: MouseEvent<HTMLAnchorElement>) => void;\r\n    onImageClick: () => void;\r\n    publicCard?: boolean;\r\n    uploader?: string;\r\n}\r\n\r\nconst Card = ({ imageUrl, onDelete, onImageClick, publicCard, uploader }: CardProps) => {\r\n    return (\r\n        <div className=\"card\">\r\n            <div className=\"card-content\">\r\n                <div className=\"content\" style={{backgroundImage: `url(${imageUrl})`}} onClick={onImageClick}></div>\r\n            </div>\r\n            <footer className=\"card-footer\">\r\n                {publicCard && <p className=\"px-5 py-2\">Uploaded by: {uploader}</p>}\r\n                {!publicCard && <a href=\"/#\" className=\"card-footer-item\" onClick={onDelete}>Delete</a>}\r\n            </footer>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Card;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\ninterface ImageModalProps {\r\n  onClose: () => void;\r\n  url: string;\r\n}\r\n\r\nconst ImageModal = ({ onClose, url }: ImageModalProps) => {\r\n  const targetEl = document.getElementById('modal-root');\r\n\r\n  const modal = (\r\n    <div className=\"modal\">\r\n      <div className=\"modal-background\" onClick={onClose}></div>\r\n      <div className=\"modal-content modal-content--image\">\r\n        <img src={url} alt=\"\"/>\r\n      </div>\r\n      <button className=\"modal-close is-large\" onClick={onClose}></button>\r\n    </div>\r\n  );\r\n\r\n  return targetEl ? ReactDOM.createPortal(modal, targetEl) : modal;\r\n}\r\n\r\nexport default ImageModal;","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useAppSelector } from '../../hooks/hooks';\r\nimport { getImage } from '../../store/actions/galleryActions';\r\nimport { GalleryImage } from '../../store/types/galleryTypes';\r\nimport Card from '../UI/Card';\r\nimport ImageModal from '../UI/ImageModal';\r\n\r\nconst Homepage = () => {\r\n    const { images, imagesLoaded } = useAppSelector(state => state.gallery);\r\n    const dispatch = useDispatch();\r\n    const [imageUrl, setImageUrl] = useState('');\r\n\r\n    useEffect(() => {\r\n        if(!imagesLoaded) dispatch(getImage());\r\n      }, [imagesLoaded, dispatch]);\r\n\r\n    return (\r\n        <section className=\"section\">\r\n      <div className=\"container\">\r\n        <h1 className=\"title has-text-centered is-size-1 mb-6\">Welcome</h1>\r\n        <h2>Lorem ipsum dolor sit, amet consectetur adipisicing elit. Ullam incidunt at animi eligendi facere reiciendis ad assumenda, omnis quasi id atque consequuntur obcaecati explicabo eius natus quae officiis itaque dolorem!</h2>\r\n        {images.length > 0 && \r\n          <div className=\"cards-wrapper is-flex mt-5\">\r\n            {images.map((image: GalleryImage) => (\r\n              <Card \r\n                key={image.id}\r\n                imageUrl={image.imageUrl}\r\n                onImageClick={() => setImageUrl(image.imageUrl)}\r\n                onDelete={() => {}}\r\n                publicCard\r\n                uploader={image.uploaderName}\r\n              />\r\n            ))}\r\n          </div>\r\n        }\r\n      </div>\r\n      {imageUrl && <ImageModal url={imageUrl} onClose={() => setImageUrl('')} />}\r\n    </section>\r\n    );\r\n};\r\n\r\nexport default Homepage;","import React, { FormEvent, useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useAppSelector } from '../../hooks/hooks';\r\nimport { sendPasswordResetEmail, setError, setSuccess } from '../../store/actions/authActions';\r\nimport Button from '../UI/Button';\r\nimport Input from '../UI/Input';\r\nimport Message from '../UI/Message';\r\n\r\nconst ForgotPassword = () => {\r\n    const [email, setEmail] = useState('');\r\n    const {error, success} = useAppSelector(state => state.auth);\r\n    const dispatch = useDispatch();\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            if(error) {\r\n              dispatch(setError(''));\r\n            }\r\n            if(success) {\r\n              dispatch(setSuccess(''));\r\n            }\r\n        }\r\n    }, [error, dispatch, success]);\r\n\r\n    const submitHandler = async (e: FormEvent) => {\r\n        e.preventDefault();\r\n        if(success) {\r\n          dispatch(setSuccess(''));\r\n        }\r\n        if(error) {\r\n          dispatch(setError(''));\r\n        }\r\n        setLoading(true);\r\n        await dispatch(sendPasswordResetEmail(email, \"Email sent!\"));\r\n        setLoading(false);\r\n    }\r\n\r\n    return (\r\n        <section className=\"section\">\r\n            <div className=\"container\">\r\n                <h2 className=\"has-text-centered is-size-2 mb-3\">Reset Password</h2>\r\n                <form className=\"form\" onSubmit={submitHandler}>\r\n                    {error && <Message type=\"danger\" msg={error} />}\r\n                    {success && <Message type=\"success\" msg={success} />}\r\n                    <Input\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        value={email}\r\n                        onChange={e => setEmail(e.currentTarget.value)}\r\n                        placeholder=\"Email address\"\r\n                        label=\"Email address\"\r\n                    />\r\n                    <Button text={loading ? \"Loading...\" : \"Send password reset email\"} className=\"is-primary is-fullwidth mt-5\" disabled={loading}/>\r\n                </form>\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default ForgotPassword;","import { Route, Redirect, RouteProps } from \"react-router-dom\";\r\nimport { useAppSelector } from \"../../hooks/hooks\";\r\n\r\ninterface Props extends RouteProps {\r\n    children: any;\r\n}\r\n\r\nfunction PrivateRoute({ children, ...rest }: Props) {\r\n    let { authenticated } =  useAppSelector(state => state.auth);\r\n\r\n    return (\r\n        <Route\r\n        {...rest}\r\n        render={({ location }) =>\r\n            authenticated ? (\r\n            children\r\n          ) : (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/signin\",\r\n                // state: { from: location }\r\n              }}\r\n            />\r\n          )\r\n        }\r\n      />\r\n    );\r\n}\r\n\r\nexport default PrivateRoute;\r\n\r\n/*\r\nimport { Route, Redirect, RouteProps } from \"react-router-dom\";\r\nimport { useAppSelector } from \"../../hooks/hooks\";\r\n\r\ninterface Props extends RouteProps {\r\n    component: any;\r\n}\r\n\r\nfunction PrivateRoute({ component: Component, ...rest }: Props) {\r\n    let { authenticated } =  useAppSelector(state => state.auth);\r\n\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={props => authenticated \r\n            ? <Component {...props} />\r\n            : <Redirect\r\n                to={{\r\n                    pathname: \"/signin\",\r\n                    state: { from: location }\r\n                }}\r\n            />\r\n        }\r\n      />\r\n    );\r\n}\r\n\r\nexport default PrivateRoute;\r\n\r\n*/ ","import React, {useRef, FormEvent} from 'react';\r\nimport Button from './Button';\r\n\r\ninterface FileUploadProps {\r\n    onChange: (e: FormEvent<HTMLInputElement>) => void;\r\n}\r\n\r\nconst FileUpload = ({ onChange }: FileUploadProps) => {\r\n    const fileInput = useRef<HTMLInputElement>(null);\r\n\r\n    const pickImageButtonClickHandler = () => {\r\n        if(fileInput.current){\r\n            fileInput.current.click();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"file-upload\">\r\n            <input type=\"file\" name=\"files\" onChange={onChange} multiple ref={fileInput} className=\"is-hidden\"/>\r\n            <Button text=\"Pick images\" onClick={pickImageButtonClickHandler} type=\"button\" className=\"is-link\" />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FileUpload;","import React, { ReactNode } from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\ninterface ModalProps {\r\n  onClose: () => void;\r\n  title: string;\r\n  children: ReactNode;\r\n}\r\n\r\nconst Modal = ({ onClose, title, children }: ModalProps) => {\r\n  const targetEl = document.getElementById('modal-root');\r\n\r\n  const modal = (\r\n    <div className=\"modal\">\r\n      <div className=\"modal-background\" onClick={onClose}></div>\r\n      <div className=\"modal-card\">\r\n        <header className=\"modal-card-head\">\r\n          <p className=\"modal-card-title\">{title}</p>\r\n          <button className=\"delete\" aria-label=\"close\" onClick={onClose}></button>\r\n        </header>\r\n        <section className=\"modal-card-body\">\r\n          {children}\r\n        </section>\r\n        <footer className=\"modal-card-foot\">\r\n          <button className=\"button\" onClick={onClose}>Cancel</button>\r\n        </footer>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return targetEl ? ReactDOM.createPortal(modal, targetEl) : modal;\r\n}\r\n\r\nexport default Modal;","import React, { FormEvent, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useAppSelector } from '../../hooks/hooks';\r\nimport { addImage } from '../../store/actions/galleryActions';\r\nimport Button from '../UI/Button';\r\nimport FileUpload from '../UI/FileUpload';\r\nimport Modal from '../UI/Modal';\r\n\r\ninterface UploadImagesModalProps {\r\n    onClose: () => void;\r\n}\r\n\r\ninterface Image {\r\n    name: string;\r\n    progress: number;\r\n}\r\n\r\nconst UploadImagesModal = ({ onClose }: UploadImagesModalProps) => {\r\n    const [files, setFiles] = useState<FileList | null>();\r\n    const [filesArr, setFilesArr] = useState<Image[]>([]);\r\n    const [disabled, setDisabled] = useState(true);\r\n    const dispatch = useDispatch();\r\n    const { user } = useAppSelector(state => state.auth);\r\n\r\n    const changeHandler = (e: FormEvent<HTMLInputElement>) => {\r\n        if(e.currentTarget.files && e.currentTarget.files.length > 0) {\r\n            setDisabled(false);\r\n            let images: Image[] = [];\r\n            Array.from(e.currentTarget.files)\r\n                .forEach(file => images.push({name: file.name, progress: 0}));\r\n            setFilesArr(images);\r\n        } else {\r\n            setFilesArr([]);\r\n            setDisabled(true);\r\n        }\r\n        setFiles(e.currentTarget.files);\r\n    }\r\n\r\n    const submitHandler = (e: FormEvent) => {\r\n        e.preventDefault();\r\n        if(files && files.length > 0){\r\n            const currentUser = \r\n            user !== null \r\n            ? user \r\n            : {\r\n                firstName: '',\r\n                email: '',\r\n                id: '',\r\n                createdAt: ''\r\n              };\r\n              \r\n            dispatch(addImage(files, currentUser, (progress, file) => {\r\n                const copyOfFilesArr = [...filesArr];\r\n                const findFile = copyOfFilesArr.find(f => f.name === file.name);\r\n                if(findFile) {\r\n                    findFile.progress = Math.floor(progress);\r\n                }\r\n                const updatedArr = copyOfFilesArr.map(f => f.name === file.name ? findFile ? findFile : f : f);\r\n                setFilesArr(updatedArr);\r\n            }));\r\n            setFiles(null);\r\n            setDisabled(true);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Modal onClose={onClose} title='Upload images'>\r\n            <form onSubmit={submitHandler}>\r\n                <FileUpload onChange={changeHandler}/>\r\n                {\r\n                    filesArr.length > 0 && \r\n                    <ul className=\"mt-3 mb-3\">\r\n                        {\r\n                            filesArr.map((file: Image, index) => (\r\n                                <li key={index} className=\"mb-2\">\r\n                                    <p className=\"is-size-7 mb-1\">\r\n                                        {file.name}\r\n                                        {file.progress === 100 && <span className=\"ml-1 has-text-success has-text-weight-bold\">UPLOADED</span>}\r\n                                    </p>\r\n                                    <progress className=\"progress is-primary is-small\" value={file.progress} max=\"100\">{file.progress}%</progress>\r\n                                </li>\r\n                            ))\r\n                        }\r\n                    </ul>\r\n                }\r\n                <Button text=\"Upload\" disabled={disabled} className=\"is-primary mt-2\" />\r\n            </form>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default UploadImagesModal;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Button from './Button';\r\n\r\ninterface AlertProps {\r\n    onClose: () => void;\r\n    onSubmit: () => void;\r\n    title: string;\r\n    deleting: boolean;\r\n}\r\n\r\nconst Alert = ({onClose, onSubmit, title, deleting}: AlertProps) => {\r\n    const targetEl = document.getElementById('modal-root');\r\n\r\n    const alert = (\r\n        <div className=\"modal\">\r\n            <div className=\"modal-background\" onClick={onClose}></div>\r\n            <div className=\"modal-content has-background-white px-4 py-4 is-rounded\">\r\n                <h2 className=\"is-size-4 has-text-centered mb-4\">{title}</h2>\r\n                <div className=\"is-flex align-center\">\r\n                    <Button text='Cancel' className='mr-2' onClick={onClose}/>\r\n                    <Button text={deleting ? 'Deleting...' : \"Delete\"} className=\"is-danger\" onClick={onSubmit} disabled={deleting}/>\r\n                </div>\r\n            </div>\r\n            <button className=\"modal-close is-large\" onClick={onClose}></button>\r\n        </div>\r\n    )\r\n\r\n    return targetEl ? ReactDOM.createPortal(alert, targetEl) : alert;\r\n};\r\n\r\nexport default Alert;","import React, { useEffect, useState, MouseEvent } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useAppSelector } from '../../hooks/hooks';\r\nimport { setSuccess } from '../../store/actions/authActions';\r\nimport { deleteImage, getImage } from '../../store/actions/galleryActions';\r\nimport { GalleryImage } from '../../store/types/galleryTypes';\r\nimport UploadImagesModal from '../sections/UploadImagesModal';\r\nimport Alert from '../UI/Alert';\r\nimport Button from '../UI/Button';\r\nimport Card from '../UI/Card';\r\nimport ImageModal from '../UI/ImageModal';\r\nimport Message from '../UI/Message';\r\n\r\nconst Dashboard = () => {\r\n    const [showUploadImagesModal, setShowUploadImagesModal] = useState(false);\r\n    const [showDeleteImageAlert, setShowDeleteImageAlert] = useState(false);\r\n    const [selectedImage, setSelectedImage] = useState<GalleryImage | null>(null);\r\n    const [deleting, setDeleting] = useState(false);\r\n    const [imageUrl, setImageUrl] = useState('');\r\n    const [userImages, setUserImages] = useState<GalleryImage[]>([]);\r\n    const { images, imagesLoaded } = useAppSelector(state => state.gallery);\r\n    const {user, needVerification, success} = useAppSelector(state => state.auth);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if(!imagesLoaded) dispatch(getImage());\r\n    }, [imagesLoaded, dispatch]);\r\n\r\n    useEffect(() => {\r\n        if(images.length > 0) {\r\n            const filtered = images.filter(i => i.uploaderId === user?.id);\r\n            setUserImages(filtered);\r\n        } else {\r\n            setUserImages([]);\r\n        }\r\n    }, [images, user]);\r\n\r\n    useEffect(() => {\r\n        if(success){\r\n            dispatch(setSuccess(''));\r\n        }\r\n    }, [success, dispatch]);\r\n\r\n    const deleteHandler = (image: GalleryImage, e: MouseEvent) => {\r\n        e.preventDefault();\r\n        setShowDeleteImageAlert(true);\r\n        setSelectedImage(image);\r\n    }\r\n\r\n    const deleteImageHandler = () => {\r\n        if(selectedImage) {\r\n            setDeleting(true);\r\n            dispatch(deleteImage(selectedImage, () => {\r\n                setDeleting(false);\r\n                setShowDeleteImageAlert(false);\r\n            }))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <section className=\"section\">\r\n            <div className=\"container\">\r\n                {needVerification && <Message type=\"success\" msg=\"Please verify your email address\"/>}\r\n                <h1 className=\"is-size-1\">Welcome {user?.firstName}</h1>\r\n                <Button text=\"Upload images\" className=\"mb-5\" onClick={() => setShowUploadImagesModal(true)} />\r\n                {\r\n                    !imagesLoaded\r\n                    ? <h2 className=\"is-size-3\">Loading images...</h2>\r\n                    : userImages.length === 0\r\n                        ? <Message type=\"info\" msg=\"No images selected, please upload some\"/>\r\n                        : <div className=\"cards-wrapper is-flex\">\r\n                            {\r\n                                userImages.map((image: GalleryImage) => (\r\n                                    <Card\r\n                                        key={image.id}\r\n                                        onDelete={(e: MouseEvent) => deleteHandler(image, e)}\r\n                                        imageUrl={image.imageUrl}\r\n                                        onImageClick={() => setImageUrl(image.imageUrl)}\r\n                                    />\r\n                                ))\r\n                            }\r\n                        </div>\r\n                }\r\n                {showUploadImagesModal && <UploadImagesModal onClose={() => setShowUploadImagesModal(false)}/>}\r\n                {\r\n                    showDeleteImageAlert && \r\n                    <Alert\r\n                        title=\"Are you sure want to delete this image?\"\r\n                        onClose={() => setShowDeleteImageAlert(false)}\r\n                        onSubmit={deleteImageHandler}\r\n                        deleting={deleting}\r\n                    />\r\n                }\r\n                {imageUrl && <ImageModal url={imageUrl} onClose={() => setImageUrl('')}/>}\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default Dashboard;","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useAppSelector } from '../../hooks/hooks';\r\nimport { signout } from '../../store/actions/authActions';\r\nimport Button from '../UI/Button';\r\n\r\nexport default function Header() {\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const { authenticated } = useAppSelector(state => state.auth);\r\n\r\n    const logoutClickHandler = () => dispatch(signout());\r\n\r\n    return (\r\n        <nav className=\"navbar is-spaced has-shadow\">\r\n            <div className=\"container\">\r\n                <div className=\"navbar-brand\">\r\n                    <Link className=\"navbar-item\" to={authenticated ? \"/dashboard\" : \"/\"}>AppName</Link>\r\n                </div>\r\n\r\n                <div className=\"navbar-end\">\r\n                    <div className=\"navbar-items\">\r\n                        {\r\n                            authenticated \r\n                            ?\r\n                            <Button text=\"Sign out\" onClick={logoutClickHandler}/>\r\n                            :\r\n                            <div className=\"buttons\">\r\n                                <Button text=\"Sign up\" onClick={() => history.push('/signup')} className=\"is-primary\" />\r\n                                <Button text=\"Sign in\" onClick={() => history.push('/signin')} />\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n","export default function Loader() {\r\n    return (\r\n        <div className=\"loader-wrapper\">\r\n            <div className=\"custom-loader\"></div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport './App.css';\nimport SignIn from './components/pages/SignIn';\nimport SignUp from './components/pages/SignUp';\nimport Homepage from './components/pages/Homepage';\nimport ForgotPassword from \"./components/pages/ForgotPassword\";\nimport PrivateRoute from \"./components/auth/PrivateRoute\";\nimport Dashboard from \"./components/pages/Dashboard\";\nimport Header from \"./components/sections/Header\";\nimport { useDispatch } from \"react-redux\";\nimport { useAppSelector } from \"./hooks/hooks\";\nimport { getUserById, setLoading, setNeedVerification } from \"./store/actions/authActions\";\nimport firebase from './firebase/config';\nimport Loader from \"./components/UI/Loader\";\n\nfunction App() {\n  const dispatch = useDispatch();\n  const { loading } = useAppSelector(state => state.auth);\n \n  useEffect(() => {\n    dispatch(setLoading(true));\n    const unsubscribe = firebase.auth().onAuthStateChanged(async (user) => {\n      if (user) {\n        dispatch(setLoading(true));\n        await dispatch(getUserById(user.uid));\n        if(!user.emailVerified) {\n          dispatch(setNeedVerification());\n        }\n      }\n      dispatch(setLoading(false));\n    });\n\n    return () => {\n      unsubscribe();\n    }\n  }, [dispatch]);\n\n  if(loading) {\n    return <Loader />;\n  }\n\n  return (\n    <Router basename=\"/pictures\">\n      <Header />\n      <Switch>\n        <Route path=\"/\" exact>\n          <Homepage />\n        </Route>\n        <Route path=\"/signup\">\n          <SignUp />\n        </Route>\n        <Route path=\"/signin\">\n          <SignIn />\n        </Route>\n        <Route path=\"/forgot-password\">\n          <ForgotPassword />\n        </Route>\n        <PrivateRoute path=\"/dashboard\">\n          <Dashboard />\n        </PrivateRoute>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { AuthAction, AuthState, SET_USER, SET_LOADING, SIGN_OUT, SET_ERROR, NEED_VERIFICATION, SET_SUCCESS } from '../types/authTypes';\r\n\r\nconst initialState: AuthState = {\r\n  user: null,\r\n  authenticated: false,\r\n  loading: false,\r\n  error: '',\r\n  needVerification: false,\r\n  success: ''\r\n}\r\n\r\nconst authReducer = (state = initialState, action: AuthAction) => {\r\n  switch(action.type) {\r\n    case SET_USER:\r\n      return {\r\n        ...state,\r\n        user: action.payload,\r\n        authenticated: true\r\n      }\r\n    case SET_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: action.payload\r\n      }\r\n    case SIGN_OUT:\r\n      return {\r\n        ...state,\r\n        user: null,\r\n        authenticated: false,\r\n        loading: false\r\n      }\r\n    case SET_ERROR:\r\n      return {\r\n        ...state,\r\n        error: action.payload\r\n      }\r\n    case NEED_VERIFICATION:\r\n      return {\r\n        ...state,\r\n        needVerification: true\r\n      }\r\n    case SET_SUCCESS:\r\n      return {\r\n        ...state,\r\n        success: action.payload\r\n      }\r\n    default: \r\n      return state;\r\n  }\r\n}\r\n\r\nexport default authReducer;","import { GET_IMAGES, ADD_IMAGE, DELETE_IMAGE, GalleryAction, GalleryState } from '../types/galleryTypes';\r\n\r\nconst initialState: GalleryState = {\r\n    images: [],\r\n    imagesLoaded: false\r\n}\r\n\r\nconst galleryReducer = (state = initialState, action: GalleryAction) => {\r\n    switch(action.type) {\r\n        case ADD_IMAGE:\r\n            return {\r\n                ...state,\r\n                images: [action.payload, ...state.images]\r\n            }\r\n        case GET_IMAGES: \r\n            return {\r\n                ...state,\r\n                images: action.payload,\r\n                imagesLoaded: true\r\n            }\r\n        case DELETE_IMAGE:\r\n            return {\r\n                ...state,\r\n                images: [...state.images].filter(image => image.id !== action.payload.id)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default galleryReducer;","import { createStore, applyMiddleware, combineReducers } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport authReducer from './reducers/authReducer';\r\nimport galleryReducer from './reducers/galleryReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    gallery: galleryReducer\r\n});\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n\r\n// export type RootState = ReturnType<typeof rootReducer>;\r\n// Infer the `RootState` and `AppDispatch` types from the store itself\r\nexport type RootState = ReturnType<typeof store.getState>\r\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\r\nexport type AppDispatch = typeof store.dispatch\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './firebase/config';\nimport 'bulma/css/bulma.min.css';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}